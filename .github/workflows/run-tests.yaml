name: run-tests
on: [push]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    env:
      CC: /usr/bin/clang
      CXX: /usr/bin/clang++
    steps:
      - name: Update
        run: sudo apt update
      - name: Setup clang
        run: wget https://apt.llvm.org/llvm.sh && chmod u+x llvm.sh && sudo ./llvm.sh 17 all
      - name: Setup cmake
        run: sudo apt install cmake
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Prepare for build
        run: mkdir ${{ github.workspace }}/src/build
      - name: Index
        working-directory: ${{ github.workspace }}/src/build
        run: CC=clang CXX=clang++ cmake -DCMAKE_BUILD_TYPE=Debug ..
      - name: Build
        working-directory: ${{ github.workspace }}/src/build
        run: cmake --build . --target lin_check_test -j
      - name: Run
        working-directory: ${{ github.workspace }}/src/build
        run: ./test/runtime/lin_check_test
  verifying-test:
    runs-on: ubuntu-latest
    env:
      CC: /usr/bin/clang
      CXX: /usr/bin/clang++
    steps:
      - name: Update
        run: sudo apt update
      - name: Setup clang
        run: wget https://apt.llvm.org/llvm.sh && chmod u+x llvm.sh && sudo ./llvm.sh 17 all
      - name: Delete old clang
        run: sudo rm -r /usr/lib/llvm-15 && sudo rm /usr/bin/clang  && sudo rm /usr/bin/clang++
      - name: Rename clang-17 to clang
        run: cp /usr/bin/clang-17 /usr/bin/clang && cp /usr/bin/clang++-17 /usr/bin/clang++ && cp /usr/bin/opt-17 /usr/bin/opt && cp /usr/bin/llvm-dis-17 /usr/bin/llvm-dis
      - name: Setup cmake
        run: sudo apt install cmake
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Prepare for build
        run: mkdir ${{ github.workspace }}/src/build
      - name: Index
        working-directory: ${{ github.workspace }}/src/build
        run: CC=clang-17 CXX=clang++-17 cmake -DCMAKE_BUILD_TYPE=Debug ..
      - name: Build
        working-directory: ${{ github.workspace }}/src/build
        run: cmake --build codegen -j
      - name: Build nonlinear_queue
        working-directory: ${{ github.workspace }}/src/verifying
        run: ./verify.py build -g --src ./targets/nonlinear_queue.cpp
      - name: Check pct strategy
        working-directory: ${{ github.workspace }}/src/verifying
        run: if [[ "$(./verify.py run --strategy pct --tasks 10 --rounds 240)" =~ .*"success".* ]]; then exit 1; fi;
